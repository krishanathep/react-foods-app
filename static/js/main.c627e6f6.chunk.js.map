{"version":3,"sources":["components/FoodItemList.jsx","layouts/Navbar.jsx","App.js","index.js"],"names":["FoodItemList","props","className","data-toggle","data-target","class","align","foodItems","length","map","foodItem","key","id","food","cost","onClick","editFoodItem","deleteFoodItem","boughtFoodItem","status","colSpan","tabindex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","name","placeholder","value","onChange","handleInputChange","addFoodItem","setEditing","updateFoodItem","Navbar","href","this","title","Component","App","state","userId","editing","bind","event","preventDefault","target","setState","currentFood","updatedCurrentFood","Object","assign","index","filter","item","window","location","reload","updatedFood","updatedCost","updatedFoodItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c627e6f6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FoodItemList = (props) => {\r\n  return (\r\n    <div className=\"FoodItemList\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mt-5\">\r\n            <div className=\"card-body\">\r\n              <button\r\n                className='btn btn-success mb-2 float-right'\r\n                data-toggle='modal'\r\n                data-target='#addNewModal'\r\n              >\r\n                <i class=\"fas fa-plus-circle\"></i> ADD NEW\r\n              </button>\r\n              <table className=\"table table-bordered\">\r\n                <thead align=\"center\">\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>FOOD</th>\r\n                    <th>COST</th>\r\n                    <th>ACTIONS</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {props.foodItems.length > 0 ? (\r\n                    props.foodItems.map((foodItem) => (\r\n                      <tr key={foodItem.id}>\r\n                        <td align=\"center\">{foodItem.id}</td>\r\n                        <td>{foodItem.food}</td>\r\n                        <td>{foodItem.cost}</td>\r\n                        <td>\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => props.editFoodItem(foodItem)}\r\n                            data-toggle='modal'\r\n                            data-target='#updateModal'\r\n                          >\r\n                            <i class=\"fas fa-edit\"></i>\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-danger mr-1 ml-1\"\r\n                            onClick={() => props.deleteFoodItem(foodItem.id)}\r\n                          >\r\n                            <i class=\"fas fa-trash-alt\"></i>\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-info\"\r\n                            onClick={() => props.boughtFoodItem(foodItem)}\r\n                          >\r\n                            {foodItem.status ? <i class=\"fas fa-cart-plus\"></i> : <i class=\"far fa-clock\"></i>}\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td colSpan={4} align='center'>No food for a lazy man!</td>\r\n                      </tr>\r\n                    )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add New Modal*/}\r\n      <div class=\"modal fade\" id=\"addNewModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">NEW FOOD ITEM</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"food\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Food Name..\"\r\n                    value={props.food}\r\n                    onChange={props.handleInputChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name='cost'\r\n                    value={props.cost}\r\n                    className='form-control'\r\n                    placeholder='Enter Food Cost...'\r\n                    onChange={props.handleInputChange}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button onClick={props.addFoodItem} data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\">SUBMIT</button>\r\n              <button onClick={() => props.setEditing(false)} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">CLOSE</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Update Modal*/}\r\n      <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">UPDATE FOOD ITEM</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"food\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Food Name..\"\r\n                    value={props.food}\r\n                    onChange={props.handleInputChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name='cost'\r\n                    value={props.cost}\r\n                    className='form-control'\r\n                    placeholder='Enter Food Cost...'\r\n                    onChange={props.handleInputChange}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button onClick={props.updateFoodItem} data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\">SUBMIT</button>\r\n              <button onClick={() => props.setEditing(false)} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">CLOSE</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodItemList;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Navbar'>\r\n                <nav className='navbar navbar-expand-lg bg-info navbar-dark'>\r\n                    <div className=\"container\">\r\n                        <a href=\"#\" className=\"navbar-brand\">\r\n                            {this.props.title}\r\n                        </a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from \"react\";\r\nimport FoodItemList from \"./components/FoodItemList\";\r\nimport Navbar from \"./layouts/Navbar\";\r\nimport Pagination from 'react-js-pagination'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: null,\r\n      userId: 1,\r\n      food: \"\",\r\n      cost: \"\",\r\n      status: false,\r\n      foodItem: {\r\n        id: null,\r\n        userId: 1,\r\n        food: \"\",\r\n        cost: 0,\r\n        state: false\r\n      },\r\n      foodItems: [\r\n        { id: 1, userId: 1, food: \"Rice\", cost: 100, status: false },\r\n        { id: 2, userId: 2, food: \"Beans\", cost: 200, status: false },\r\n        { id: 3, userId: 3, food: \"Coke\", cost: 400, status: false },\r\n        { id: 4, userId: 4, food: \"Coffee\", cost: 300, status: true },\r\n        { id: 5, userId: 5, food: \"Donut\", cost: 200, status: false },\r\n        { id: 6, userId: 6, food: \"Sushi\", cost: 500, status: true }\r\n      ],\r\n      editing: false,\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.addFoodItem = this.addFoodItem.bind(this);\r\n    this.deleteFoodItem = this.deleteFoodItem.bind(this)\r\n    this.setEditing = this.setEditing.bind(this)\r\n    this.editFoodItem = this.editFoodItem.bind(this)\r\n    this.updateFoodItem = this.updateFoodItem.bind(this)\r\n    this.boughtFoodItem = this.boughtFoodItem.bind(this)\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  addFoodItem(event) {\r\n    event.preventDefault();\r\n    if (!this.state.food) return;\r\n    const foodItem = {\r\n      id: this.state.foodItems.length + 1,\r\n      food: this.state.food,\r\n      cost: this.state.cost,\r\n      userId: this.state.userId,\r\n      status: this.state.status,\r\n    };\r\n\r\n    this.setState({\r\n      food: \"\",\r\n      cost: \"\",\r\n      foodItem: foodItem,\r\n      foodItems: [...this.state.foodItems, foodItem],\r\n    });\r\n  }\r\n\r\n  boughtFoodItem(currentFood) {\r\n    const updatedCurrentFood = Object.assign({}, currentFood, { status : true })\r\n    const foodItems = this.state.foodItems.map((foodItem, index) => (foodItem.id === currentFood.id ? updatedCurrentFood : foodItem ))\r\n    this.setState({ foodItems : foodItems })\r\n  }\r\n\r\n  deleteFoodItem(id) {\r\n    const foodItems = this.state.foodItems.filter( item => item.id !== id )\r\n    this.setState({ foodItems: foodItems })\r\n\r\n    if(this.state.editing === true) {\r\n      window.location.reload()\r\n    }\r\n  }\r\n\r\n  editFoodItem(foodItem) {\r\n    this.setEditing(true)\r\n    this.setState({\r\n      food: foodItem.food,\r\n      cost: foodItem.cost,\r\n      foodItem: foodItem\r\n    })\r\n  }\r\n\r\n  setEditing(value) {\r\n    {/*if(typeof value !== 'boolean') { throw \"This value must either be true or false\" }*/ }\r\n    this.setState({\r\n      editing: value, food: '', cost: ''\r\n    })\r\n  }\r\n\r\n  updateFoodItem(event) {\r\n    event.preventDefault()\r\n    const updatedFood = this.state.food\r\n    const updatedCost = this.state.cost\r\n    const updatedFoodItem = Object.assign({}, this.state.foodItem, { food: updatedFood, cost: updatedCost})\r\n    const foodItems = this.state.foodItems.map((foodItem) => (foodItem.id === this.state.foodItem.id ? updatedFoodItem : foodItem ))\r\n    this.setState({ food: '', cost: '', foodItems: foodItems, editing : false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar title='REACT FOOD ITEMS' />\r\n        <div className='container'>\r\n        <FoodItemList\r\n          foodItems={this.state.foodItems}\r\n          deleteFoodItem={this.deleteFoodItem}\r\n          editFoodItem={this.editFoodItem}\r\n          boughtFoodItem={this.boughtFoodItem}\r\n          food={this.state.food}\r\n          cost={this.state.cost}\r\n          addFoodItem={this.addFoodItem}\r\n          handleInputChange={this.handleInputChange}\r\n          updateFoodItem={this.updateFoodItem}\r\n          setEditing={this.setEditing}\r\n          />\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}